import { docker, dockerImageAsset } from "@up-sdk/provider-docker"
dialect { dockerfile } from docker

// asset<dockerImageAsset> site

// let monitorDockerContainer = context => {
//     while true {
//         val request = await fetch "http://localhost:8080"
//         val status = request.status
//         if status != 200 {
//             fault(status)
//             exit
//         }
//         wait(5s)
//     }
// } emits fault(int status)

// // lifecycle events
// :up = context => {
//     site = dockerfile {
//         FROM nginx:alpine
//         
//         COPY ./staticsite /usr/share/nginx/html
//     }   |> output = docker.build
//         |> docker.saveImage output.image, env.DOCKER_OUT_FILE or nothing
//         |> docker.assetFromLocalImage output.image
//     
//     site:down = {
//         wait(1m):then = {
//             alarmSiteIsDown()
//         }
//     }// 

//     site:up = context => {
//         notifySiteIsUp()
//         spawn {
//             val monitor = monitorDockerContainer(context) {
//                 on fault = {
//                     site.down()
//                 }
//             }
//         }
//     }// 

//     if (context.new) {
//         site.up({
//             ports: {
//                 "8080": "80"
//             }
//         })
//     }
//     if (context.migrate) {
//         site.down()
//         site.up()
//     }
// }// 
